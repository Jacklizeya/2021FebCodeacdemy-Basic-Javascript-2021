let employee = {
    salary: 100000,
    }
    
    

    
    export  let getCadre = function () {
      if (employee.salary >= payGrades.entryLevel.minemployeeSalary && employee.salary <= payGrades.entryLevel.maxemployeeSalary) {
        return 'entryLevel';
      } else if (employee.salary >= payGrades.midLevel.minemployeeSalary && employee.salary <= payGrades.midLevel.maxemployeeSalary) {
        return 'midLevel';
      } else return 'seniorLevel';
    }
    
     export let calculateTax = function () {
      return payGrades[getCadre()].taxMultiplier * employee.salary;
    }
    
     export let getBenefits = function () {
      return payGrades[getCadre()].benefits.join(', ');
    }
    
     export let calculateBonus = function () {
      return .02 * employee.salary;
    }
    
    export let reimbursementEligibility = function () {
      let reimbursementCosts = { health: 5000, housing: 8000, wellness: 6000, gym: 12000 };
      let totalBenefitsValue = 0; 
      let employeeBenefits = payGrades[getCadre()].benefits;
      for (let i = 0; i < employeeBenefits.length; i++) {
        totalBenefitsValue += reimbursementCosts[employeeBenefits[i]];
      }
      return totalBenefitsValue;
    }
    


    export let payGrades = {
    entryLevel: { taxMultiplier: .05, benefits: ['health'], minemployeeSalary: 10000, maxemployeeSalary: 49999 },
    midLevel: { taxMultiplier: .1, benefits: ['health', 'housing'], minemployeeSalary: 50000, maxemployeeSalary: 99999 },
    seniorLevel: { taxMultiplier: .2, benefits: ['health', 'housing', 'wellness', 'gym'], minemployeeSalary: 100000, maxemployeeSalary: 200000 }
    };


 console.log(employee)
    
    export default employee;
